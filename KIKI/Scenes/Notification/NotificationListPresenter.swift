//
//  NotificationListPresenter.swift
//  KIKI
//
//  Created by ons  on 21/12/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NotificationListPresenterProtocol: AnyObject {
    var view: NotificationListViewControllerProtocol? { get set }
    func presentNotificationList(notifications: [NotificationAPIModel])
}

class NotificationListPresenter: NotificationListPresenterProtocol {

    // MARK: - Properties

    weak var view: NotificationListViewControllerProtocol?
    private let timeFormatter: TimeFormatterProtocol

    // MARK: - DI

    init(timeFormatter: TimeFormatterProtocol) {
        self.timeFormatter = timeFormatter
    }

    // MARK: - Actions

    func presentNotificationList(notifications: [NotificationAPIModel]) {
        let notificationPresentableList = notifications
            .map({ notification -> NotificationModel in
                if let createdAt = notification.createdAt {
                    let createdTime = timeFormatter.formatTimeAgo(dateString: createdAt)
                    return NotificationModel(apiModel: notification, createdAt: createdTime)
                } else {
                    return NotificationModel(apiModel: notification)
                }
        })
        view?.display(notifications: notificationPresentableList)
    }
}
